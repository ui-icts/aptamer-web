image: docker:19.03.1

stages:
  - test
  - build

services:
  - docker:19.03.1-dind
  - name: postgres:10
    alias: pgdb

variables:
  WEB_IMAGE: $CI_REGISTRY_IMAGE/web:latest
  BOOTSTRAP_IMAGE: $CI_REGISTRY_IMAGE/bootstrap:latest
  BATCH_IMAGE: $DOCKERHUB_USER/aptamer-batch:latest
  POSTGRES_DB: aptamer_test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST_AUTH_METHOD: trust

unit_test:
  stage: test
  image: elixir:1.10
  tags:
    - docker-build
  script:
    - cd backend
    - mix local.hex --force
    - mix local.rebar --force
    - mix deps.get
    - DATABASE_HOST=pgdb mix test
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - deps
      - _build

build_web:
  stage: build
  tags:
    - docker-build
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull --cache-from $WEB_IMAGE -t $WEB_IMAGE .
    - docker tag $WEB_IMAGE aptamer-web:latest
    - docker build -f Dockerfile.bootstrap -t $BOOTSTRAP_IMAGE .
    - docker push $WEB_IMAGE
    - docker push $BOOTSTRAP_IMAGE

build_batch:
  stage: build
  dependencies:
    - build:web
  tags:
    - docker-build
  before_script:
    - echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USER --password-stdin
  script:
    - docker tag $WEB_IMAGE aptamer-web:latest
    - docker build --pull -f Dockerfile.batch -t $BATCH_IMAGE
    - docker push $BATCH_IMAGE
