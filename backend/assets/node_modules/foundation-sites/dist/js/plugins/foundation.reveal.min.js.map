{"version":3,"sources":["webpack://__FOUNDATION_EXTERNAL__.[name]/webpack/universalModuleDefinition","webpack://__FOUNDATION_EXTERNAL__.[name]/webpack/bootstrap","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.core\"],\"amd\":\"./foundation.core\",\"commonjs\":\"./foundation.core\",\"commonjs2\":\"./foundation.core\"}","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.core\"],\"amd\":\"./foundation.core.plugin\",\"commonjs\":\"./foundation.core.plugin\",\"commonjs2\":\"./foundation.core.plugin\"}","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.core\"],\"amd\":\"./foundation.core.utils\",\"commonjs\":\"./foundation.core.utils\",\"commonjs2\":\"./foundation.core.utils\"}","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.util.keyboard\"],\"amd\":\"./foundation.util.keyboard\",\"commonjs\":\"./foundation.util.keyboard\",\"commonjs2\":\"./foundation.util.keyboard\"}","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.util.mediaQuery\"],\"amd\":\"./foundation.util.mediaQuery\",\"commonjs\":\"./foundation.util.mediaQuery\",\"commonjs2\":\"./foundation.util.mediaQuery\"}","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.util.motion\"],\"amd\":\"./foundation.util.motion\",\"commonjs\":\"./foundation.util.motion\",\"commonjs2\":\"./foundation.util.motion\"}","webpack://__FOUNDATION_EXTERNAL__.[name]/js/entries/plugins/foundation.reveal.js","webpack://__FOUNDATION_EXTERNAL__.[name]/js/foundation.reveal.js","webpack://__FOUNDATION_EXTERNAL__.[name]/js/foundation.util.triggers.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__foundation_core__","__WEBPACK_EXTERNAL_MODULE__foundation_util_keyboard__","__WEBPACK_EXTERNAL_MODULE__foundation_util_mediaQuery__","__WEBPACK_EXTERNAL_MODULE__foundation_util_motion__","__WEBPACK_EXTERNAL_MODULE__foundation_util_touch__","__WEBPACK_EXTERNAL_MODULE_jquery__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","./js/foundation.reveal.js","__webpack_exports__","_foundation_util_triggers__WEBPACK_IMPORTED_MODULE_5__","_typeof","obj","iterator","constructor","_defineProperties","target","props","length","descriptor","configurable","writable","_possibleConstructorReturn","self","_assertThisInitialized","Reveal","instance","Constructor","TypeError","protoProps","staticProps","$","_foundation_core_utils__WEBPACK_IMPORTED_MODULE_1__","this","className","Triggers","Keyboard","_this2","_foundation_util_mediaQuery__WEBPACK_IMPORTED_MODULE_3__","_init","concat","id","jquery__WEBPACK_IMPORTED_MODULE_0___default","$anchor","attr","MediaQuery","cached","fullScreen","$element","hasClass","mq","options","overlay","$overlay","_makeOverlay","role","aria-hidden","data-yeti-box","data-resize","detach","appendTo","addClass","_events","onLoadListener","additionalOverlayClasses","width","outerWidth","parseInt","outerHeight","vOffset","top","left","Math","min","hOffset","height","css","margin","_this3","_this","apply","toggle.zf.trigger","toggle","closeOnClick","off","close","on","e","a","contains","document","_updatePosition","_handleState","location","hash","isActive","open","scrollTop","_this4","history","replaceState","pushState","activeElement","is","visibility","$activeAnchor","show","multipleOpened","_foundation_util_motion__WEBPACK_IMPORTED_MODULE_4__","animateIn","_addGlobalClasses","findFocusable","trigger","_disableScroll","Motion","focusableElements","tabindex","focus","_foundation_util_keyboard__WEBPACK_IMPORTED_MODULE_2__","trapFocus","updateScrollbarClass","removeClass","closeOnEsc","releaseFocus","animateOut","animationOut","finishUp","updateHistory","urlWithoutHash","title","defaults","MutationObserver","prefixes","el","data","type","split","Listeners","Basic","debounceGlobalListener","debounce","listener","yetiBoxes","slice","arguments","timer","clearTimeout","setTimeout","openListener","Initializers","toggleListener","closeListener","triggers","closeableListener","animation","fadeOut","toggleFocusListener","triggerHandler","addOpenListener","$elem","addCloseListener","addToggleListener","addCloseableListener","addToggleFocusListener","Global","$nodes","scrollListener","closeMeListener","pluginId","plugin","namespace","not","plugins","plugNames","pluginName","push","listeners","map","join","addResizeListener","resizeListener","addScrollListener","addMutationEventsListener","find","listeningElementsMutation","mutationRecordsList","$target","attributeName","pageYOffset","closest","observe","attributes","childList","characterData","subtree","addSimpleListeners","$document","attributeFilter","init","Foundation","addGlobalListeners","triggersInitialized"],"mappings":"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","file":"foundation.reveal.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"./foundation.core.utils\"), require(\"./foundation.core\"), require(\"jquery\"), require(\"./foundation.util.keyboard\"), require(\"./foundation.util.mediaQuery\"), require(\"./foundation.util.motion\"), require(\"./foundation.core.plugin\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"./foundation.core.utils\", \"./foundation.core\", \"jquery\", \"./foundation.util.keyboard\", \"./foundation.util.mediaQuery\", \"./foundation.util.motion\", \"./foundation.core.plugin\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"foundation.reveal\"] = factory(require(\"./foundation.core.utils\"), require(\"./foundation.core\"), require(\"jquery\"), require(\"./foundation.util.keyboard\"), require(\"./foundation.util.mediaQuery\"), require(\"./foundation.util.motion\"), require(\"./foundation.core.plugin\"));\n\telse\n\t\troot[\"__FOUNDATION_EXTERNAL__\"] = root[\"__FOUNDATION_EXTERNAL__\"] || {}, root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.reveal\"] = factory(root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.core\"], root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.core\"], root[\"jQuery\"], root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.util.keyboard\"], root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.util.mediaQuery\"], root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.util.motion\"], root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.core\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__foundation_core_utils__, __WEBPACK_EXTERNAL_MODULE__foundation_core__, __WEBPACK_EXTERNAL_MODULE_jquery__, __WEBPACK_EXTERNAL_MODULE__foundation_util_keyboard__, __WEBPACK_EXTERNAL_MODULE__foundation_util_mediaQuery__, __WEBPACK_EXTERNAL_MODULE__foundation_util_motion__, __WEBPACK_EXTERNAL_MODULE__foundation_core_plugin__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_core__;","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_core_plugin__;","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_core_utils__;","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_util_keyboard__;","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_util_mediaQuery__;","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_util_motion__;","import { Foundation } from './foundation.core';\n\nimport { Reveal } from '../../foundation.reveal';\nFoundation.plugin(Reveal, 'Reveal');\n\nexport { Foundation, Reveal };\n","'use strict';\n\nimport $ from 'jquery';\nimport { onLoad } from './foundation.core.utils';\nimport { Keyboard } from './foundation.util.keyboard';\nimport { MediaQuery } from './foundation.util.mediaQuery';\nimport { Motion } from './foundation.util.motion';\nimport { Plugin } from './foundation.core.plugin';\nimport { Triggers } from './foundation.util.triggers';\n\n/**\n * Reveal module.\n * @module foundation.reveal\n * @requires foundation.util.keyboard\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.motion if using animations\n */\n\nclass Reveal extends Plugin {\n  /**\n   * Creates a new instance of Reveal.\n   * @class\n   * @name Reveal\n   * @param {jQuery} element - jQuery object to use for the modal.\n   * @param {Object} options - optional parameters.\n   */\n  _setup(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Reveal.defaults, this.$element.data(), options);\n    this.className = 'Reveal'; // ie9 back compat\n    this._init();\n\n    // Triggers init is idempotent, just need to make sure it is initialized\n    Triggers.init($);\n\n    Keyboard.register('Reveal', {\n      'ESCAPE': 'close',\n    });\n  }\n\n  /**\n   * Initializes the modal by adding the overlay and close buttons, (if selected).\n   * @private\n   */\n  _init() {\n    MediaQuery._init();\n    this.id = this.$element.attr('id');\n    this.isActive = false;\n    this.cached = {mq: MediaQuery.current};\n\n    this.$anchor = $(`[data-open=\"${this.id}\"]`).length ? $(`[data-open=\"${this.id}\"]`) : $(`[data-toggle=\"${this.id}\"]`);\n    this.$anchor.attr({\n      'aria-controls': this.id,\n      'aria-haspopup': true,\n      'tabindex': 0\n    });\n\n    if (this.options.fullScreen || this.$element.hasClass('full')) {\n      this.options.fullScreen = true;\n      this.options.overlay = false;\n    }\n    if (this.options.overlay && !this.$overlay) {\n      this.$overlay = this._makeOverlay(this.id);\n    }\n\n    this.$element.attr({\n        'role': 'dialog',\n        'aria-hidden': true,\n        'data-yeti-box': this.id,\n        'data-resize': this.id\n    });\n\n    if(this.$overlay) {\n      this.$element.detach().appendTo(this.$overlay);\n    } else {\n      this.$element.detach().appendTo($(this.options.appendTo));\n      this.$element.addClass('without-overlay');\n    }\n    this._events();\n    if (this.options.deepLink && window.location.hash === ( `#${this.id}`)) {\n      this.onLoadListener = onLoad($(window), () => this.open());\n    }\n  }\n\n  /**\n   * Creates an overlay div to display behind the modal.\n   * @private\n   */\n  _makeOverlay() {\n    var additionalOverlayClasses = '';\n\n    if (this.options.additionalOverlayClasses) {\n      additionalOverlayClasses = ' ' + this.options.additionalOverlayClasses;\n    }\n\n    return $('<div></div>')\n      .addClass('reveal-overlay' + additionalOverlayClasses)\n      .appendTo(this.options.appendTo);\n  }\n\n  /**\n   * Updates position of modal\n   * TODO:  Figure out if we actually need to cache these values or if it doesn't matter\n   * @private\n   */\n  _updatePosition() {\n    var width = this.$element.outerWidth();\n    var outerWidth = $(window).width();\n    var height = this.$element.outerHeight();\n    var outerHeight = $(window).height();\n    var left, top = null;\n    if (this.options.hOffset === 'auto') {\n      left = parseInt((outerWidth - width) / 2, 10);\n    } else {\n      left = parseInt(this.options.hOffset, 10);\n    }\n    if (this.options.vOffset === 'auto') {\n      if (height > outerHeight) {\n        top = parseInt(Math.min(100, outerHeight / 10), 10);\n      } else {\n        top = parseInt((outerHeight - height) / 4, 10);\n      }\n    } else if (this.options.vOffset !== null) {\n      top = parseInt(this.options.vOffset, 10);\n    }\n\n    if (top !== null) {\n      this.$element.css({top: top + 'px'});\n    }\n\n    // only worry about left if we don't have an overlay or we have a horizontal offset,\n    // otherwise we're perfectly in the middle\n    if (!this.$overlay || (this.options.hOffset !== 'auto')) {\n      this.$element.css({left: left + 'px'});\n      this.$element.css({margin: '0px'});\n    }\n\n  }\n\n  /**\n   * Adds event handlers for the modal.\n   * @private\n   */\n  _events() {\n    var _this = this;\n\n    this.$element.on({\n      'open.zf.trigger': this.open.bind(this),\n      'close.zf.trigger': (event, $element) => {\n        if ((event.target === _this.$element[0]) ||\n            ($(event.target).parents('[data-closable]')[0] === $element)) { // only close reveal when it's explicitly called\n          return this.close.apply(this);\n        }\n      },\n      'toggle.zf.trigger': this.toggle.bind(this),\n      'resizeme.zf.trigger': function() {\n        _this._updatePosition();\n      }\n    });\n\n    if (this.options.closeOnClick && this.options.overlay) {\n      this.$overlay.off('.zf.reveal').on('click.zf.reveal', function(e) {\n        if (e.target === _this.$element[0] ||\n          $.contains(_this.$element[0], e.target) ||\n            !$.contains(document, e.target)) {\n              return;\n        }\n        _this.close();\n      });\n    }\n    if (this.options.deepLink) {\n      $(window).on(`hashchange.zf.reveal:${this.id}`, this._handleState.bind(this));\n    }\n  }\n\n  /**\n   * Handles modal methods on back/forward button clicks or any other event that triggers hashchange.\n   * @private\n   */\n  _handleState(e) {\n    if(window.location.hash === ( '#' + this.id) && !this.isActive){ this.open(); }\n    else{ this.close(); }\n  }\n\n  /**\n  * Disables the scroll when Reveal is shown to prevent the background from shifting\n  * @param {number} scrollTop - Scroll to visually apply, window current scroll by default\n  */\n  _disableScroll(scrollTop) {\n    scrollTop = scrollTop || $(window).scrollTop();\n    if ($(document).height() > $(window).height()) {\n      $(\"html\")\n        .css(\"top\", -scrollTop);\n    }\n  }\n\n  /**\n  * Reenables the scroll when Reveal closes\n  * @param {number} scrollTop - Scroll to restore, html \"top\" property by default (as set by `_disableScroll`)\n  */\n  _enableScroll(scrollTop) {\n    scrollTop = scrollTop || parseInt($(\"html\").css(\"top\"));\n    if ($(document).height() > $(window).height()) {\n      $(\"html\")\n        .css(\"top\", \"\");\n      $(window).scrollTop(-scrollTop);\n    }\n  }\n\n\n  /**\n   * Opens the modal controlled by `this.$anchor`, and closes all others by default.\n   * @function\n   * @fires Reveal#closeme\n   * @fires Reveal#open\n   */\n  open() {\n    // either update or replace browser history\n    const hash = `#${this.id}`;\n    if (this.options.deepLink && window.location.hash !== hash) {\n\n      if (window.history.pushState) {\n        if (this.options.updateHistory) {\n          window.history.pushState({}, '', hash);\n        } else {\n          window.history.replaceState({}, '', hash);\n        }\n      } else {\n        window.location.hash = hash;\n      }\n    }\n\n    // Remember anchor that opened it to set focus back later, have general anchors as fallback\n    this.$activeAnchor = $(document.activeElement).is(this.$anchor) ? $(document.activeElement) : this.$anchor;\n\n    this.isActive = true;\n\n    // Make elements invisible, but remove display: none so we can get size and positioning\n    this.$element\n        .css({ 'visibility': 'hidden' })\n        .show()\n        .scrollTop(0);\n    if (this.options.overlay) {\n      this.$overlay.css({'visibility': 'hidden'}).show();\n    }\n\n    this._updatePosition();\n\n    this.$element\n      .hide()\n      .css({ 'visibility': '' });\n\n    if(this.$overlay) {\n      this.$overlay.css({'visibility': ''}).hide();\n      if(this.$element.hasClass('fast')) {\n        this.$overlay.addClass('fast');\n      } else if (this.$element.hasClass('slow')) {\n        this.$overlay.addClass('slow');\n      }\n    }\n\n\n    if (!this.options.multipleOpened) {\n      /**\n       * Fires immediately before the modal opens.\n       * Closes any other modals that are currently open\n       * @event Reveal#closeme\n       */\n      this.$element.trigger('closeme.zf.reveal', this.id);\n    }\n\n    this._disableScroll();\n\n    var _this = this;\n\n    // Motion UI method of reveal\n    if (this.options.animationIn) {\n      function afterAnimation(){\n        _this.$element\n          .attr({\n            'aria-hidden': false,\n            'tabindex': -1\n          })\n          .focus();\n        _this._addGlobalClasses();\n        Keyboard.trapFocus(_this.$element);\n      }\n      if (this.options.overlay) {\n        Motion.animateIn(this.$overlay, 'fade-in');\n      }\n      Motion.animateIn(this.$element, this.options.animationIn, () => {\n        if(this.$element) { // protect against object having been removed\n          this.focusableElements = Keyboard.findFocusable(this.$element);\n          afterAnimation();\n        }\n      });\n    }\n    // jQuery method of reveal\n    else {\n      if (this.options.overlay) {\n        this.$overlay.show(0);\n      }\n      this.$element.show(this.options.showDelay);\n    }\n\n    // handle accessibility\n    this.$element\n      .attr({\n        'aria-hidden': false,\n        'tabindex': -1\n      })\n      .focus();\n    Keyboard.trapFocus(this.$element);\n\n    this._addGlobalClasses();\n\n    this._addGlobalListeners();\n\n    /**\n     * Fires when the modal has successfully opened.\n     * @event Reveal#open\n     */\n    this.$element.trigger('open.zf.reveal');\n  }\n\n  /**\n   * Adds classes and listeners on document required by open modals.\n   *\n   * The following classes are added and updated:\n   * - `.is-reveal-open` - Prevents the scroll on document\n   * - `.zf-has-scroll`  - Displays a disabled scrollbar on document if required like if the\n   *                       scroll was not disabled. This prevent a \"shift\" of the page content due\n   *                       the scrollbar disappearing when the modal opens.\n   *\n   * @private\n   */\n  _addGlobalClasses() {\n    const updateScrollbarClass = () => {\n      $('html').toggleClass('zf-has-scroll', !!($(document).height() > $(window).height()));\n    };\n\n    this.$element.on('resizeme.zf.trigger.revealScrollbarListener', () => updateScrollbarClass());\n    updateScrollbarClass();\n    $('html').addClass('is-reveal-open');\n  }\n\n  /**\n   * Removes classes and listeners on document that were required by open modals.\n   * @private\n   */\n  _removeGlobalClasses() {\n    this.$element.off('resizeme.zf.trigger.revealScrollbarListener');\n    $('html').removeClass('is-reveal-open');\n    $('html').removeClass('zf-has-scroll');\n  }\n\n  /**\n   * Adds extra event handlers for the body and window if necessary.\n   * @private\n   */\n  _addGlobalListeners() {\n    var _this = this;\n    if(!this.$element) { return; } // If we're in the middle of cleanup, don't freak out\n    this.focusableElements = Keyboard.findFocusable(this.$element);\n\n    if (!this.options.overlay && this.options.closeOnClick && !this.options.fullScreen) {\n      $('body').on('click.zf.reveal', function(e) {\n        if (e.target === _this.$element[0] ||\n          $.contains(_this.$element[0], e.target) ||\n            !$.contains(document, e.target)) { return; }\n        _this.close();\n      });\n    }\n\n    if (this.options.closeOnEsc) {\n      $(window).on('keydown.zf.reveal', function(e) {\n        Keyboard.handleKey(e, 'Reveal', {\n          close: function() {\n            if (_this.options.closeOnEsc) {\n              _this.close();\n            }\n          }\n        });\n      });\n    }\n  }\n\n  /**\n   * Closes the modal.\n   * @function\n   * @fires Reveal#closed\n   */\n  close() {\n    if (!this.isActive || !this.$element.is(':visible')) {\n      return false;\n    }\n    var _this = this;\n\n    // Motion UI method of hiding\n    if (this.options.animationOut) {\n      if (this.options.overlay) {\n        Motion.animateOut(this.$overlay, 'fade-out');\n      }\n\n      Motion.animateOut(this.$element, this.options.animationOut, finishUp);\n    }\n    // jQuery method of hiding\n    else {\n      this.$element.hide(this.options.hideDelay);\n\n      if (this.options.overlay) {\n        this.$overlay.hide(0, finishUp);\n      }\n      else {\n        finishUp();\n      }\n    }\n\n    // Conditionals to remove extra event listeners added on open\n    if (this.options.closeOnEsc) {\n      $(window).off('keydown.zf.reveal');\n    }\n\n    if (!this.options.overlay && this.options.closeOnClick) {\n      $('body').off('click.zf.reveal');\n    }\n\n    this.$element.off('keydown.zf.reveal');\n\n    function finishUp() {\n\n      // Get the current top before the modal is closed and restore the scroll after.\n      // TODO: use component properties instead of HTML properties\n      // See https://github.com/zurb/foundation-sites/pull/10786\n      var scrollTop = parseInt($(\"html\").css(\"top\"));\n\n      if ($('.reveal:visible').length  === 0) {\n        _this._removeGlobalClasses(); // also remove .is-reveal-open from the html element when there is no opened reveal\n      }\n\n      Keyboard.releaseFocus(_this.$element);\n\n      _this.$element.attr('aria-hidden', true);\n\n      _this._enableScroll(scrollTop);\n\n      /**\n      * Fires when the modal is done closing.\n      * @event Reveal#closed\n      */\n      _this.$element.trigger('closed.zf.reveal');\n    }\n\n    /**\n    * Resets the modal content\n    * This prevents a running video to keep going in the background\n    */\n    if (this.options.resetOnClose) {\n      this.$element.html(this.$element.html());\n    }\n\n    this.isActive = false;\n    // If deepLink and we did not switched to an other modal...\n    if (_this.options.deepLink && window.location.hash === `#${this.id}`) {\n      // Remove the history hash\n      if (window.history.replaceState) {\n        const urlWithoutHash = window.location.pathname + window.location.search;\n        if (this.options.updateHistory) {\n          window.history.pushState({}, '', urlWithoutHash); // remove the hash\n        } else {\n          window.history.replaceState('', document.title, urlWithoutHash);\n        }\n      } else {\n        window.location.hash = '';\n      }\n    }\n\n    this.$activeAnchor.focus();\n  }\n\n  /**\n   * Toggles the open/closed state of a modal.\n   * @function\n   */\n  toggle() {\n    if (this.isActive) {\n      this.close();\n    } else {\n      this.open();\n    }\n  };\n\n  /**\n   * Destroys an instance of a modal.\n   * @function\n   */\n  _destroy() {\n    if (this.options.overlay) {\n      this.$element.appendTo($(this.options.appendTo)); // move $element outside of $overlay to prevent error unregisterPlugin()\n      this.$overlay.hide().off().remove();\n    }\n    this.$element.hide().off();\n    this.$anchor.off('.zf');\n    $(window).off(`.zf.reveal:${this.id}`)\n    if (this.onLoadListener) $(window).off(this.onLoadListener);\n\n    if ($('.reveal:visible').length  === 0) {\n      this._removeGlobalClasses(); // also remove .is-reveal-open from the html element when there is no opened reveal\n    }\n  };\n}\n\nReveal.defaults = {\n  /**\n   * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n   * @option\n   * @type {string}\n   * @default ''\n   */\n  animationIn: '',\n  /**\n   * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n   * @option\n   * @type {string}\n   * @default ''\n   */\n  animationOut: '',\n  /**\n   * Time, in ms, to delay the opening of a modal after a click if no animation used.\n   * @option\n   * @type {number}\n   * @default 0\n   */\n  showDelay: 0,\n  /**\n   * Time, in ms, to delay the closing of a modal after a click if no animation used.\n   * @option\n   * @type {number}\n   * @default 0\n   */\n  hideDelay: 0,\n  /**\n   * Allows a click on the body/overlay to close the modal.\n   * @option\n   * @type {boolean}\n   * @default true\n   */\n  closeOnClick: true,\n  /**\n   * Allows the modal to close if the user presses the `ESCAPE` key.\n   * @option\n   * @type {boolean}\n   * @default true\n   */\n  closeOnEsc: true,\n  /**\n   * If true, allows multiple modals to be displayed at once.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  multipleOpened: false,\n  /**\n   * Distance, in pixels, the modal should push down from the top of the screen.\n   * @option\n   * @type {number|string}\n   * @default auto\n   */\n  vOffset: 'auto',\n  /**\n   * Distance, in pixels, the modal should push in from the side of the screen.\n   * @option\n   * @type {number|string}\n   * @default auto\n   */\n  hOffset: 'auto',\n  /**\n   * Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  fullScreen: false,\n  /**\n   * Allows the modal to generate an overlay div, which will cover the view when modal opens.\n   * @option\n   * @type {boolean}\n   * @default true\n   */\n  overlay: true,\n  /**\n   * Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  resetOnClose: false,\n  /**\n   * Link the location hash to the modal.\n   * Set the location hash when the modal is opened/closed, and open/close the modal when the location changes.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  deepLink: false,\n  /**\n   * If `deepLink` is enabled, update the browser history with the open modal\n   * @option\n   * @default false\n   */\n  updateHistory: false,\n    /**\n   * Allows the modal to append to custom div.\n   * @option\n   * @type {string}\n   * @default \"body\"\n   */\n  appendTo: \"body\",\n  /**\n   * Allows adding additional class names to the reveal overlay.\n   * @option\n   * @type {string}\n   * @default ''\n   */\n  additionalOverlayClasses: ''\n};\n\nexport {Reveal};\n","'use strict';\n\nimport $ from 'jquery';\nimport { onLoad } from './foundation.core.utils';\nimport { Motion } from './foundation.util.motion';\n\nconst MutationObserver = (function () {\n  var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n  for (var i=0; i < prefixes.length; i++) {\n    if (`${prefixes[i]}MutationObserver` in window) {\n      return window[`${prefixes[i]}MutationObserver`];\n    }\n  }\n  return false;\n}());\n\nconst triggers = (el, type) => {\n  el.data(type).split(' ').forEach(id => {\n    $(`#${id}`)[ type === 'close' ? 'trigger' : 'triggerHandler'](`${type}.zf.trigger`, [el]);\n  });\n};\n\nvar Triggers = {\n  Listeners: {\n    Basic: {},\n    Global: {}\n  },\n  Initializers: {}\n}\n\nTriggers.Listeners.Basic  = {\n  openListener: function() {\n    triggers($(this), 'open');\n  },\n  closeListener: function() {\n    let id = $(this).data('close');\n    if (id) {\n      triggers($(this), 'close');\n    }\n    else {\n      $(this).trigger('close.zf.trigger');\n    }\n  },\n  toggleListener: function() {\n    let id = $(this).data('toggle');\n    if (id) {\n      triggers($(this), 'toggle');\n    } else {\n      $(this).trigger('toggle.zf.trigger');\n    }\n  },\n  closeableListener: function(e) {\n    e.stopPropagation();\n    let animation = $(this).data('closable');\n\n    if(animation !== ''){\n      Motion.animateOut($(this), animation, function() {\n        $(this).trigger('closed.zf');\n      });\n    }else{\n      $(this).fadeOut().trigger('closed.zf');\n    }\n  },\n  toggleFocusListener: function() {\n    let id = $(this).data('toggle-focus');\n    $(`#${id}`).triggerHandler('toggle.zf.trigger', [$(this)]);\n  }\n};\n\n// Elements with [data-open] will reveal a plugin that supports it when clicked.\nTriggers.Initializers.addOpenListener = ($elem) => {\n  $elem.off('click.zf.trigger', Triggers.Listeners.Basic.openListener);\n  $elem.on('click.zf.trigger', '[data-open]', Triggers.Listeners.Basic.openListener);\n}\n\n// Elements with [data-close] will close a plugin that supports it when clicked.\n// If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\nTriggers.Initializers.addCloseListener = ($elem) => {\n  $elem.off('click.zf.trigger', Triggers.Listeners.Basic.closeListener);\n  $elem.on('click.zf.trigger', '[data-close]', Triggers.Listeners.Basic.closeListener);\n}\n\n// Elements with [data-toggle] will toggle a plugin that supports it when clicked.\nTriggers.Initializers.addToggleListener = ($elem) => {\n  $elem.off('click.zf.trigger', Triggers.Listeners.Basic.toggleListener);\n  $elem.on('click.zf.trigger', '[data-toggle]', Triggers.Listeners.Basic.toggleListener);\n}\n\n// Elements with [data-closable] will respond to close.zf.trigger events.\nTriggers.Initializers.addCloseableListener = ($elem) => {\n  $elem.off('close.zf.trigger', Triggers.Listeners.Basic.closeableListener);\n  $elem.on('close.zf.trigger', '[data-closeable], [data-closable]', Triggers.Listeners.Basic.closeableListener);\n}\n\n// Elements with [data-toggle-focus] will respond to coming in and out of focus\nTriggers.Initializers.addToggleFocusListener = ($elem) => {\n  $elem.off('focus.zf.trigger blur.zf.trigger', Triggers.Listeners.Basic.toggleFocusListener);\n  $elem.on('focus.zf.trigger blur.zf.trigger', '[data-toggle-focus]', Triggers.Listeners.Basic.toggleFocusListener);\n}\n\n\n\n// More Global/complex listeners and triggers\nTriggers.Listeners.Global  = {\n  resizeListener: function($nodes) {\n    if(!MutationObserver){//fallback for IE 9\n      $nodes.each(function(){\n        $(this).triggerHandler('resizeme.zf.trigger');\n      });\n    }\n    //trigger all listening elements and signal a resize event\n    $nodes.attr('data-events', \"resize\");\n  },\n  scrollListener: function($nodes) {\n    if(!MutationObserver){//fallback for IE 9\n      $nodes.each(function(){\n        $(this).triggerHandler('scrollme.zf.trigger');\n      });\n    }\n    //trigger all listening elements and signal a scroll event\n    $nodes.attr('data-events', \"scroll\");\n  },\n  closeMeListener: function(e, pluginId){\n    let plugin = e.namespace.split('.')[0];\n    let plugins = $(`[data-${plugin}]`).not(`[data-yeti-box=\"${pluginId}\"]`);\n\n    plugins.each(function(){\n      let _this = $(this);\n      _this.triggerHandler('close.zf.trigger', [_this]);\n    });\n  }\n}\n\n// Global, parses whole document.\nTriggers.Initializers.addClosemeListener = function(pluginName) {\n  var yetiBoxes = $('[data-yeti-box]'),\n      plugNames = ['dropdown', 'tooltip', 'reveal'];\n\n  if(pluginName){\n    if(typeof pluginName === 'string'){\n      plugNames.push(pluginName);\n    }else if(typeof pluginName === 'object' && typeof pluginName[0] === 'string'){\n      plugNames.concat(pluginName);\n    }else{\n      console.error('Plugin names must be strings');\n    }\n  }\n  if(yetiBoxes.length){\n    let listeners = plugNames.map((name) => {\n      return `closeme.zf.${name}`;\n    }).join(' ');\n\n    $(window).off(listeners).on(listeners, Triggers.Listeners.Global.closeMeListener);\n  }\n}\n\nfunction debounceGlobalListener(debounce, trigger, listener) {\n  let timer, args = Array.prototype.slice.call(arguments, 3);\n  $(window).off(trigger).on(trigger, function(e) {\n    if (timer) { clearTimeout(timer); }\n    timer = setTimeout(function(){\n      listener.apply(null, args);\n    }, debounce || 10);//default time to emit scroll event\n  });\n}\n\nTriggers.Initializers.addResizeListener = function(debounce){\n  let $nodes = $('[data-resize]');\n  if($nodes.length){\n    debounceGlobalListener(debounce, 'resize.zf.trigger', Triggers.Listeners.Global.resizeListener, $nodes);\n  }\n}\n\nTriggers.Initializers.addScrollListener = function(debounce){\n  let $nodes = $('[data-scroll]');\n  if($nodes.length){\n    debounceGlobalListener(debounce, 'scroll.zf.trigger', Triggers.Listeners.Global.scrollListener, $nodes);\n  }\n}\n\nTriggers.Initializers.addMutationEventsListener = function($elem) {\n  if(!MutationObserver){ return false; }\n  let $nodes = $elem.find('[data-resize], [data-scroll], [data-mutate]');\n\n  //element callback\n  var listeningElementsMutation = function (mutationRecordsList) {\n    var $target = $(mutationRecordsList[0].target);\n\n    //trigger the event handler for the element depending on type\n    switch (mutationRecordsList[0].type) {\n      case \"attributes\":\n        if ($target.attr(\"data-events\") === \"scroll\" && mutationRecordsList[0].attributeName === \"data-events\") {\n          $target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\n        }\n        if ($target.attr(\"data-events\") === \"resize\" && mutationRecordsList[0].attributeName === \"data-events\") {\n          $target.triggerHandler('resizeme.zf.trigger', [$target]);\n         }\n        if (mutationRecordsList[0].attributeName === \"style\") {\n          $target.closest(\"[data-mutate]\").attr(\"data-events\",\"mutate\");\n          $target.closest(\"[data-mutate]\").triggerHandler('mutateme.zf.trigger', [$target.closest(\"[data-mutate]\")]);\n        }\n        break;\n\n      case \"childList\":\n        $target.closest(\"[data-mutate]\").attr(\"data-events\",\"mutate\");\n        $target.closest(\"[data-mutate]\").triggerHandler('mutateme.zf.trigger', [$target.closest(\"[data-mutate]\")]);\n        break;\n\n      default:\n        return false;\n      //nothing\n    }\n  };\n\n  if ($nodes.length) {\n    //for each element that needs to listen for resizing, scrolling, or mutation add a single observer\n    for (var i = 0; i <= $nodes.length - 1; i++) {\n      var elementObserver = new MutationObserver(listeningElementsMutation);\n      elementObserver.observe($nodes[i], { attributes: true, childList: true, characterData: false, subtree: true, attributeFilter: [\"data-events\", \"style\"] });\n    }\n  }\n}\n\nTriggers.Initializers.addSimpleListeners = function() {\n  let $document = $(document);\n\n  Triggers.Initializers.addOpenListener($document);\n  Triggers.Initializers.addCloseListener($document);\n  Triggers.Initializers.addToggleListener($document);\n  Triggers.Initializers.addCloseableListener($document);\n  Triggers.Initializers.addToggleFocusListener($document);\n\n}\n\nTriggers.Initializers.addGlobalListeners = function() {\n  let $document = $(document);\n  Triggers.Initializers.addMutationEventsListener($document);\n  Triggers.Initializers.addResizeListener();\n  Triggers.Initializers.addScrollListener();\n  Triggers.Initializers.addClosemeListener();\n}\n\n\nTriggers.init = function ($, Foundation) {\n  onLoad($(window), function () {\n    if ($.triggersInitialized !== true) {\n      Triggers.Initializers.addSimpleListeners();\n      Triggers.Initializers.addGlobalListeners();\n      $.triggersInitialized = true;\n    }\n  });\n\n  if(Foundation) {\n    Foundation.Triggers = Triggers;\n    // Legacy included to be backwards compatible for now.\n    Foundation.IHearYou = Triggers.Initializers.addGlobalListeners\n  }\n}\n\nexport {Triggers};\n"]}