{"version":3,"sources":["webpack://__FOUNDATION_EXTERNAL__.[name]/webpack/universalModuleDefinition","webpack://__FOUNDATION_EXTERNAL__.[name]/webpack/bootstrap","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.core\"],\"amd\":\"./foundation.core\",\"commonjs\":\"./foundation.core\",\"commonjs2\":\"./foundation.core\"}","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.core\"],\"amd\":\"./foundation.core.plugin\",\"commonjs\":\"./foundation.core.plugin\",\"commonjs2\":\"./foundation.core.plugin\"}","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.core\"],\"amd\":\"./foundation.core.utils\",\"commonjs\":\"./foundation.core.utils\",\"commonjs2\":\"./foundation.core.utils\"}","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.util.keyboard\"],\"amd\":\"./foundation.util.keyboard\",\"commonjs\":\"./foundation.util.keyboard\",\"commonjs2\":\"./foundation.util.keyboard\"}","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.util.motion\"],\"amd\":\"./foundation.util.motion\",\"commonjs\":\"./foundation.util.motion\",\"commonjs2\":\"./foundation.util.motion\"}","webpack:/__FOUNDATION_EXTERNAL__.[name]/external {\"root\":[\"__FOUNDATION_EXTERNAL__\",\"foundation.util.touch\"],\"amd\":\"./foundation.util.touch\",\"commonjs\":\"./foundation.util.touch\",\"commonjs2\":\"./foundation.util.touch\"}","webpack://__FOUNDATION_EXTERNAL__.[name]/js/entries/plugins/foundation.slider.js","webpack://__FOUNDATION_EXTERNAL__.[name]/js/foundation.slider.js","webpack://__FOUNDATION_EXTERNAL__.[name]/js/foundation.util.triggers.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__foundation_core__","__WEBPACK_EXTERNAL_MODULE__foundation_util_keyboard__","__WEBPACK_EXTERNAL_MODULE__foundation_util_motion__","__WEBPACK_EXTERNAL_MODULE__foundation_util_touch__","__WEBPACK_EXTERNAL_MODULE_jquery__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_foundation_core__WEBPACK_IMPORTED_MODULE_0__","plugin","_foundation_slider__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","Slider","jquery__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_0___default","_foundation_util_keyboard__WEBPACK_IMPORTED_MODULE_1__","_foundation_util_motion__WEBPACK_IMPORTED_MODULE_2__","_foundation_core_utils__WEBPACK_IMPORTED_MODULE_3__","_possibleConstructorReturn","self","_typeof","ReferenceError","_assertThisInitialized","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","this","apply","arguments","subClass","superClass","TypeError","constructor","writable","configurable","_this","SHIFT_ARROW_RIGHT","ARROW_LEFT","element","ARROW_RIGHT","$","SHIFT_ARROW_LEFT","inputs","$element","find","handles","$handle","eq","$input","length","concat","attr","$fill","css","options","vertical","disabled","hasClass","disabledClass","addClass","add","$handle2","$input2","setHandles","_events","_this2","_setInitAttr","doubleSided","val","_setHandlePos","isDbl","pctOfBar","percent","start","end","positionValueFunction","_powTransform","_logTransform","parseFloat","$hndl","location","noInvert","cb","index","h2Val","step","hOrW","vert","handleDim","getBoundingClientRect","_pctOfBar","movement","elemDim","toFixed","decimal","_setValues","dim","isLeftHndl","handlePct","lOrT","style","pxToMove","moveTime","data","isNaN","handlePos","one","clearTimeout","timeout","Move","trigger","changedDelay","idx","initVal","initialStart","initialEnd","id","max","aria-valuemax","aria-valuemin","aria-valuenow","barXY","barDim","hasVal","param","direction","eventFromBar","preventDefault","eventOffset","windowScroll","_adjustValue","clientY","elemOffset","absPosition","prev_val","firstHndlPos","div","secndHndlPos","left","_eventsForHandle","off","on","e","keyCode","handleChangeEvent","target","is","curHandle","timer","_handleEvent","draggable","currentTarget","$body","removeClass","addTouch","handleKey","oldValue","increase_fast","newValue","handled","min","abs","position","dir","clickPos","defaults","binding","clickSelect","invertVertical","frac","Triggers","obj","iterator","triggers","el","type","split","forEach","Basic","Global","debounceGlobalListener","debounce","listener","Initializers","addClosemeListener","plugNames","pluginName","prefixes","closeListener","stopPropagation","animation","animateOut","fadeOut","triggerHandler","addOpenListener","$elem","Listeners","openListener","addCloseListener","addToggleListener","toggleListener","closeableListener","addToggleFocusListener","toggleFocusListener","$nodes","each","not","pluginId","MutationObserver","scrollListener","push","yetiBoxes","plugins","map","listeners","closeMeListener","addResizeListener","resizeListener","addScrollListener","addMutationEventsListener","$target","mutationRecordsList","pageYOffset","attributeName","closest","listeningElementsMutation","observe","childList","attributeFilter","$document","document","addCloseableListener","addGlobalListeners","elementObserver","attributes","subtree","Foundation","triggersInitialized","addSimpleListeners","onLoad"],"mappings":"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","file":"foundation.slider.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"./foundation.util.keyboard\"), require(\"./foundation.core\"), require(\"jquery\"), require(\"./foundation.util.motion\"), require(\"./foundation.core.utils\"), require(\"./foundation.core.plugin\"), require(\"./foundation.util.touch\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"./foundation.util.keyboard\", \"./foundation.core\", \"jquery\", \"./foundation.util.motion\", \"./foundation.core.utils\", \"./foundation.core.plugin\", \"./foundation.util.touch\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"foundation.slider\"] = factory(require(\"./foundation.util.keyboard\"), require(\"./foundation.core\"), require(\"jquery\"), require(\"./foundation.util.motion\"), require(\"./foundation.core.utils\"), require(\"./foundation.core.plugin\"), require(\"./foundation.util.touch\"));\n\telse\n\t\troot[\"__FOUNDATION_EXTERNAL__\"] = root[\"__FOUNDATION_EXTERNAL__\"] || {}, root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.slider\"] = factory(root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.util.keyboard\"], root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.core\"], root[\"jQuery\"], root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.util.motion\"], root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.core\"], root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.core\"], root[\"__FOUNDATION_EXTERNAL__\"][\"foundation.util.touch\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__foundation_util_keyboard__, __WEBPACK_EXTERNAL_MODULE__foundation_core__, __WEBPACK_EXTERNAL_MODULE_jquery__, __WEBPACK_EXTERNAL_MODULE__foundation_util_motion__, __WEBPACK_EXTERNAL_MODULE__foundation_core_utils__, __WEBPACK_EXTERNAL_MODULE__foundation_core_plugin__, __WEBPACK_EXTERNAL_MODULE__foundation_util_touch__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_core__;","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_core_plugin__;","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_core_utils__;","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_util_keyboard__;","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_util_motion__;","module.exports = __WEBPACK_EXTERNAL_MODULE__foundation_util_touch__;","import { Foundation } from './foundation.core';\n\nimport { Slider } from '../../foundation.slider';\nFoundation.plugin(Slider, 'Slider');\n\nexport { Foundation, Slider };\n","'use strict';\n\nimport $ from 'jquery';\nimport { Keyboard } from './foundation.util.keyboard';\nimport { Move } from './foundation.util.motion';\nimport { GetYoDigits, rtl as Rtl } from './foundation.core.utils';\n\nimport { Plugin } from './foundation.core.plugin';\n\nimport { Touch } from './foundation.util.touch';\n\nimport { Triggers } from './foundation.util.triggers';\n/**\n * Slider module.\n * @module foundation.slider\n * @requires foundation.util.motion\n * @requires foundation.util.triggers\n * @requires foundation.util.keyboard\n * @requires foundation.util.touch\n */\n\nclass Slider extends Plugin {\n  /**\n   * Creates a new instance of a slider control.\n   * @class\n   * @name Slider\n   * @param {jQuery} element - jQuery object to make into a slider control.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  _setup(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Slider.defaults, this.$element.data(), options);\n    this.className = 'Slider'; // ie9 back compat\n\n  // Touch and Triggers inits are idempotent, we just need to make sure it's initialied.\n    Touch.init($);\n    Triggers.init($);\n\n    this._init();\n\n    Keyboard.register('Slider', {\n      'ltr': {\n        'ARROW_RIGHT': 'increase',\n        'ARROW_UP': 'increase',\n        'ARROW_DOWN': 'decrease',\n        'ARROW_LEFT': 'decrease',\n        'SHIFT_ARROW_RIGHT': 'increase_fast',\n        'SHIFT_ARROW_UP': 'increase_fast',\n        'SHIFT_ARROW_DOWN': 'decrease_fast',\n        'SHIFT_ARROW_LEFT': 'decrease_fast',\n        'HOME': 'min',\n        'END': 'max'\n      },\n      'rtl': {\n        'ARROW_LEFT': 'increase',\n        'ARROW_RIGHT': 'decrease',\n        'SHIFT_ARROW_LEFT': 'increase_fast',\n        'SHIFT_ARROW_RIGHT': 'decrease_fast'\n      }\n    });\n  }\n\n  /**\n   * Initilizes the plugin by reading/setting attributes, creating collections and setting the initial position of the handle(s).\n   * @function\n   * @private\n   */\n  _init() {\n    this.inputs = this.$element.find('input');\n    this.handles = this.$element.find('[data-slider-handle]');\n\n    this.$handle = this.handles.eq(0);\n    this.$input = this.inputs.length ? this.inputs.eq(0) : $(`#${this.$handle.attr('aria-controls')}`);\n    this.$fill = this.$element.find('[data-slider-fill]').css(this.options.vertical ? 'height' : 'width', 0);\n\n    var isDbl = false,\n        _this = this;\n    if (this.options.disabled || this.$element.hasClass(this.options.disabledClass)) {\n      this.options.disabled = true;\n      this.$element.addClass(this.options.disabledClass);\n    }\n    if (!this.inputs.length) {\n      this.inputs = $().add(this.$input);\n      this.options.binding = true;\n    }\n\n    this._setInitAttr(0);\n\n    if (this.handles[1]) {\n      this.options.doubleSided = true;\n      this.$handle2 = this.handles.eq(1);\n      this.$input2 = this.inputs.length > 1 ? this.inputs.eq(1) : $(`#${this.$handle2.attr('aria-controls')}`);\n\n      if (!this.inputs[1]) {\n        this.inputs = this.inputs.add(this.$input2);\n      }\n      isDbl = true;\n\n      // this.$handle.triggerHandler('click.zf.slider');\n      this._setInitAttr(1);\n    }\n\n    // Set handle positions\n    this.setHandles();\n\n    this._events();\n  }\n\n  setHandles() {\n    if(this.handles[1]) {\n      this._setHandlePos(this.$handle, this.inputs.eq(0).val(), true, () => {\n        this._setHandlePos(this.$handle2, this.inputs.eq(1).val(), true);\n      });\n    } else {\n      this._setHandlePos(this.$handle, this.inputs.eq(0).val(), true);\n    }\n  }\n\n  _reflow() {\n    this.setHandles();\n  }\n  /**\n  * @function\n  * @private\n  * @param {Number} value - floating point (the value) to be transformed using to a relative position on the slider (the inverse of _value)\n  */\n  _pctOfBar(value) {\n    var pctOfBar = percent(value - this.options.start, this.options.end - this.options.start)\n\n    switch(this.options.positionValueFunction) {\n    case \"pow\":\n      pctOfBar = this._logTransform(pctOfBar);\n      break;\n    case \"log\":\n      pctOfBar = this._powTransform(pctOfBar);\n      break;\n    }\n\n    return pctOfBar.toFixed(2)\n  }\n\n  /**\n  * @function\n  * @private\n  * @param {Number} pctOfBar - floating point, the relative position of the slider (typically between 0-1) to be transformed to a value\n  */\n  _value(pctOfBar) {\n    switch(this.options.positionValueFunction) {\n    case \"pow\":\n      pctOfBar = this._powTransform(pctOfBar);\n      break;\n    case \"log\":\n      pctOfBar = this._logTransform(pctOfBar);\n      break;\n    }\n    var value = (this.options.end - this.options.start) * pctOfBar + parseFloat(this.options.start);\n\n    return value\n  }\n\n  /**\n  * @function\n  * @private\n  * @param {Number} value - floating point (typically between 0-1) to be transformed using the log function\n  */\n  _logTransform(value) {\n    return baseLog(this.options.nonLinearBase, ((value*(this.options.nonLinearBase-1))+1))\n  }\n\n  /**\n  * @function\n  * @private\n  * @param {Number} value - floating point (typically between 0-1) to be transformed using the power function\n  */\n  _powTransform(value) {\n    return (Math.pow(this.options.nonLinearBase, value) - 1) / (this.options.nonLinearBase - 1)\n  }\n\n  /**\n   * Sets the position of the selected handle and fill bar.\n   * @function\n   * @private\n   * @param {jQuery} $hndl - the selected handle to move.\n   * @param {Number} location - floating point between the start and end values of the slider bar.\n   * @param {Function} cb - callback function to fire on completion.\n   * @fires Slider#moved\n   * @fires Slider#changed\n   */\n  _setHandlePos($hndl, location, noInvert, cb) {\n    // don't move if the slider has been disabled since its initialization\n    if (this.$element.hasClass(this.options.disabledClass)) {\n      return;\n    }\n    //might need to alter that slightly for bars that will have odd number selections.\n    location = parseFloat(location);//on input change events, convert string to number...grumble.\n\n    // prevent slider from running out of bounds, if value exceeds the limits set through options, override the value to min/max\n    if (location < this.options.start) { location = this.options.start; }\n    else if (location > this.options.end) { location = this.options.end; }\n\n    var isDbl = this.options.doubleSided;\n\n    //this is for single-handled vertical sliders, it adjusts the value to account for the slider being \"upside-down\"\n    //for click and drag events, it's weird due to the scale(-1, 1) css property\n    if (this.options.vertical && !noInvert) {\n      location = this.options.end - location;\n    }\n\n    if (isDbl) { //this block is to prevent 2 handles from crossing eachother. Could/should be improved.\n      if (this.handles.index($hndl) === 0) {\n        var h2Val = parseFloat(this.$handle2.attr('aria-valuenow'));\n        location = location >= h2Val ? h2Val - this.options.step : location;\n      } else {\n        var h1Val = parseFloat(this.$handle.attr('aria-valuenow'));\n        location = location <= h1Val ? h1Val + this.options.step : location;\n      }\n    }\n\n    var _this = this,\n        vert = this.options.vertical,\n        hOrW = vert ? 'height' : 'width',\n        lOrT = vert ? 'top' : 'left',\n        handleDim = $hndl[0].getBoundingClientRect()[hOrW],\n        elemDim = this.$element[0].getBoundingClientRect()[hOrW],\n        //percentage of bar min/max value based on click or drag point\n        pctOfBar = this._pctOfBar(location),\n        //number of actual pixels to shift the handle, based on the percentage obtained above\n        pxToMove = (elemDim - handleDim) * pctOfBar,\n        //percentage of bar to shift the handle\n        movement = (percent(pxToMove, elemDim) * 100).toFixed(this.options.decimal);\n        //fixing the decimal value for the location number, is passed to other methods as a fixed floating-point value\n        location = parseFloat(location.toFixed(this.options.decimal));\n        // declare empty object for css adjustments, only used with 2 handled-sliders\n    var css = {};\n\n    this._setValues($hndl, location);\n\n    // TODO update to calculate based on values set to respective inputs??\n    if (isDbl) {\n      var isLeftHndl = this.handles.index($hndl) === 0,\n          //empty variable, will be used for min-height/width for fill bar\n          dim,\n          //percentage w/h of the handle compared to the slider bar\n          handlePct =  ~~(percent(handleDim, elemDim) * 100);\n      //if left handle, the math is slightly different than if it's the right handle, and the left/top property needs to be changed for the fill bar\n      if (isLeftHndl) {\n        //left or top percentage value to apply to the fill bar.\n        css[lOrT] = `${movement}%`;\n        //calculate the new min-height/width for the fill bar.\n        dim = parseFloat(this.$handle2[0].style[lOrT]) - movement + handlePct;\n        //this callback is necessary to prevent errors and allow the proper placement and initialization of a 2-handled slider\n        //plus, it means we don't care if 'dim' isNaN on init, it won't be in the future.\n        if (cb && typeof cb === 'function') { cb(); }//this is only needed for the initialization of 2 handled sliders\n      } else {\n        //just caching the value of the left/bottom handle's left/top property\n        var handlePos = parseFloat(this.$handle[0].style[lOrT]);\n        //calculate the new min-height/width for the fill bar. Use isNaN to prevent false positives for numbers <= 0\n        //based on the percentage of movement of the handle being manipulated, less the opposing handle's left/top position, plus the percentage w/h of the handle itself\n        dim = movement - (isNaN(handlePos) ? (this.options.initialStart - this.options.start)/((this.options.end-this.options.start)/100) : handlePos) + handlePct;\n      }\n      // assign the min-height/width to our css object\n      css[`min-${hOrW}`] = `${dim}%`;\n    }\n\n    this.$element.one('finished.zf.animate', function() {\n                    /**\n                     * Fires when the handle is done moving.\n                     * @event Slider#moved\n                     */\n                    _this.$element.trigger('moved.zf.slider', [$hndl]);\n                });\n\n    //because we don't know exactly how the handle will be moved, check the amount of time it should take to move.\n    var moveTime = this.$element.data('dragging') ? 1000/60 : this.options.moveTime;\n\n    Move(moveTime, $hndl, function() {\n      // adjusting the left/top property of the handle, based on the percentage calculated above\n      // if movement isNaN, that is because the slider is hidden and we cannot determine handle width,\n      // fall back to next best guess.\n      if (isNaN(movement)) {\n        $hndl.css(lOrT, `${pctOfBar * 100}%`);\n      }\n      else {\n        $hndl.css(lOrT, `${movement}%`);\n      }\n\n      if (!_this.options.doubleSided) {\n        //if single-handled, a simple method to expand the fill bar\n        _this.$fill.css(hOrW, `${pctOfBar * 100}%`);\n      } else {\n        //otherwise, use the css object we created above\n        _this.$fill.css(css);\n      }\n    });\n\n\n    /**\n     * Fires when the value has not been change for a given time.\n     * @event Slider#changed\n     */\n    clearTimeout(_this.timeout);\n    _this.timeout = setTimeout(function(){\n      _this.$element.trigger('changed.zf.slider', [$hndl]);\n    }, _this.options.changedDelay);\n  }\n\n  /**\n   * Sets the initial attribute for the slider element.\n   * @function\n   * @private\n   * @param {Number} idx - index of the current handle/input to use.\n   */\n  _setInitAttr(idx) {\n    var initVal = (idx === 0 ? this.options.initialStart : this.options.initialEnd)\n    var id = this.inputs.eq(idx).attr('id') || GetYoDigits(6, 'slider');\n    this.inputs.eq(idx).attr({\n      'id': id,\n      'max': this.options.end,\n      'min': this.options.start,\n      'step': this.options.step\n    });\n    this.inputs.eq(idx).val(initVal);\n    this.handles.eq(idx).attr({\n      'role': 'slider',\n      'aria-controls': id,\n      'aria-valuemax': this.options.end,\n      'aria-valuemin': this.options.start,\n      'aria-valuenow': initVal,\n      'aria-orientation': this.options.vertical ? 'vertical' : 'horizontal',\n      'tabindex': 0\n    });\n  }\n\n  /**\n   * Sets the input and `aria-valuenow` values for the slider element.\n   * @function\n   * @private\n   * @param {jQuery} $handle - the currently selected handle.\n   * @param {Number} val - floating point of the new value.\n   */\n  _setValues($handle, val) {\n    var idx = this.options.doubleSided ? this.handles.index($handle) : 0;\n    this.inputs.eq(idx).val(val);\n    $handle.attr('aria-valuenow', val);\n  }\n\n  /**\n   * Handles events on the slider element.\n   * Calculates the new location of the current handle.\n   * If there are two handles and the bar was clicked, it determines which handle to move.\n   * @function\n   * @private\n   * @param {Object} e - the `event` object passed from the listener.\n   * @param {jQuery} $handle - the current handle to calculate for, if selected.\n   * @param {Number} val - floating point number for the new value of the slider.\n   * TODO clean this up, there's a lot of repeated code between this and the _setHandlePos fn.\n   */\n  _handleEvent(e, $handle, val) {\n    var value, hasVal;\n    if (!val) {//click or drag events\n      e.preventDefault();\n      var _this = this,\n          vertical = this.options.vertical,\n          param = vertical ? 'height' : 'width',\n          direction = vertical ? 'top' : 'left',\n          eventOffset = vertical ? e.pageY : e.pageX,\n          halfOfHandle = this.$handle[0].getBoundingClientRect()[param] / 2,\n          barDim = this.$element[0].getBoundingClientRect()[param],\n          windowScroll = vertical ? $(window).scrollTop() : $(window).scrollLeft();\n\n\n      var elemOffset = this.$element.offset()[direction];\n\n      // touch events emulated by the touch util give position relative to screen, add window.scroll to event coordinates...\n      // best way to guess this is simulated is if clientY == pageY\n      if (e.clientY === e.pageY) { eventOffset = eventOffset + windowScroll; }\n      var eventFromBar = eventOffset - elemOffset;\n      var barXY;\n      if (eventFromBar < 0) {\n        barXY = 0;\n      } else if (eventFromBar > barDim) {\n        barXY = barDim;\n      } else {\n        barXY = eventFromBar;\n      }\n      var offsetPct = percent(barXY, barDim);\n\n      value = this._value(offsetPct);\n\n      // turn everything around for RTL, yay math!\n      if (Rtl() && !this.options.vertical) {value = this.options.end - value;}\n\n      value = _this._adjustValue(null, value);\n      //boolean flag for the setHandlePos fn, specifically for vertical sliders\n      hasVal = false;\n\n      if (!$handle) {//figure out which handle it is, pass it to the next function.\n        var firstHndlPos = absPosition(this.$handle, direction, barXY, param),\n            secndHndlPos = absPosition(this.$handle2, direction, barXY, param);\n            $handle = firstHndlPos <= secndHndlPos ? this.$handle : this.$handle2;\n      }\n\n    } else {//change event on input\n      value = this._adjustValue(null, val);\n      hasVal = true;\n    }\n\n    this._setHandlePos($handle, value, hasVal);\n  }\n\n  /**\n   * Adjustes value for handle in regard to step value. returns adjusted value\n   * @function\n   * @private\n   * @param {jQuery} $handle - the selected handle.\n   * @param {Number} value - value to adjust. used if $handle is falsy\n   */\n  _adjustValue($handle, value) {\n    var val,\n      step = this.options.step,\n      div = parseFloat(step/2),\n      left, prev_val, next_val;\n    if (!!$handle) {\n      val = parseFloat($handle.attr('aria-valuenow'));\n    }\n    else {\n      val = value;\n    }\n    if (val >= 0) {\n      left = val % step;\n    } else {\n      left = step + (val % step);\n    }\n    prev_val = val - left;\n    next_val = prev_val + step;\n    if (left === 0) {\n      return val;\n    }\n    val = val >= prev_val + div ? next_val : prev_val;\n    return val;\n  }\n\n  /**\n   * Adds event listeners to the slider elements.\n   * @function\n   * @private\n   */\n  _events() {\n    this._eventsForHandle(this.$handle);\n    if(this.handles[1]) {\n      this._eventsForHandle(this.$handle2);\n    }\n  }\n\n\n  /**\n   * Adds event listeners a particular handle\n   * @function\n   * @private\n   * @param {jQuery} $handle - the current handle to apply listeners to.\n   */\n  _eventsForHandle($handle) {\n    var _this = this,\n        curHandle,\n        timer;\n\n      const handleChangeEvent = function(e) {\n        const idx = _this.inputs.index($(this));\n        _this._handleEvent(e, _this.handles.eq(idx), $(this).val());\n      };\n\n      // IE only triggers the change event when the input loses focus which strictly follows the HTML specification\n      // listen for the enter key and trigger a change\n      // @see https://html.spec.whatwg.org/multipage/input.html#common-input-element-events\n      this.inputs.off('keyup.zf.slider').on('keyup.zf.slider', function (e) {\n        if(e.keyCode == 13) handleChangeEvent.call(this, e);\n      });\n\n      this.inputs.off('change.zf.slider').on('change.zf.slider', handleChangeEvent);\n\n      if (this.options.clickSelect) {\n        this.$element.off('click.zf.slider').on('click.zf.slider', function(e) {\n          if (_this.$element.data('dragging')) { return false; }\n\n          if (!$(e.target).is('[data-slider-handle]')) {\n            if (_this.options.doubleSided) {\n              _this._handleEvent(e);\n            } else {\n              _this._handleEvent(e, _this.$handle);\n            }\n          }\n        });\n      }\n\n    if (this.options.draggable) {\n      this.handles.addTouch();\n\n      var $body = $('body');\n      $handle\n        .off('mousedown.zf.slider')\n        .on('mousedown.zf.slider', function(e) {\n          $handle.addClass('is-dragging');\n          _this.$fill.addClass('is-dragging');//\n          _this.$element.data('dragging', true);\n\n          curHandle = $(e.currentTarget);\n\n          $body.on('mousemove.zf.slider', function(e) {\n            e.preventDefault();\n            _this._handleEvent(e, curHandle);\n\n          }).on('mouseup.zf.slider', function(e) {\n            _this._handleEvent(e, curHandle);\n\n            $handle.removeClass('is-dragging');\n            _this.$fill.removeClass('is-dragging');\n            _this.$element.data('dragging', false);\n\n            $body.off('mousemove.zf.slider mouseup.zf.slider');\n          });\n      })\n      // prevent events triggered by touch\n      .on('selectstart.zf.slider touchmove.zf.slider', function(e) {\n        e.preventDefault();\n      });\n    }\n\n    $handle.off('keydown.zf.slider').on('keydown.zf.slider', function(e) {\n      var _$handle = $(this),\n          idx = _this.options.doubleSided ? _this.handles.index(_$handle) : 0,\n          oldValue = parseFloat(_this.inputs.eq(idx).val()),\n          newValue;\n\n      // handle keyboard event with keyboard util\n      Keyboard.handleKey(e, 'Slider', {\n        decrease: function() {\n          newValue = oldValue - _this.options.step;\n        },\n        increase: function() {\n          newValue = oldValue + _this.options.step;\n        },\n        decrease_fast: function() {\n          newValue = oldValue - _this.options.step * 10;\n        },\n        increase_fast: function() {\n          newValue = oldValue + _this.options.step * 10;\n        },\n        min: function() {\n          newValue = _this.options.start;\n        },\n        max: function() {\n          newValue = _this.options.end;\n        },\n        handled: function() { // only set handle pos when event was handled specially\n          e.preventDefault();\n          _this._setHandlePos(_$handle, newValue, true);\n        }\n      });\n      /*if (newValue) { // if pressed key has special function, update value\n        e.preventDefault();\n        _this._setHandlePos(_$handle, newValue);\n      }*/\n    });\n  }\n\n  /**\n   * Destroys the slider plugin.\n   */\n  _destroy() {\n    this.handles.off('.zf.slider');\n    this.inputs.off('.zf.slider');\n    this.$element.off('.zf.slider');\n\n    clearTimeout(this.timeout);\n  }\n}\n\nSlider.defaults = {\n  /**\n   * Minimum value for the slider scale.\n   * @option\n   * @type {number}\n   * @default 0\n   */\n  start: 0,\n  /**\n   * Maximum value for the slider scale.\n   * @option\n   * @type {number}\n   * @default 100\n   */\n  end: 100,\n  /**\n   * Minimum value change per change event.\n   * @option\n   * @type {number}\n   * @default 1\n   */\n  step: 1,\n  /**\n   * Value at which the handle/input *(left handle/first input)* should be set to on initialization.\n   * @option\n   * @type {number}\n   * @default 0\n   */\n  initialStart: 0,\n  /**\n   * Value at which the right handle/second input should be set to on initialization.\n   * @option\n   * @type {number}\n   * @default 100\n   */\n  initialEnd: 100,\n  /**\n   * Allows the input to be located outside the container and visible. Set to by the JS\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  binding: false,\n  /**\n   * Allows the user to click/tap on the slider bar to select a value.\n   * @option\n   * @type {boolean}\n   * @default true\n   */\n  clickSelect: true,\n  /**\n   * Set to true and use the `vertical` class to change alignment to vertical.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  vertical: false,\n  /**\n   * Allows the user to drag the slider handle(s) to select a value.\n   * @option\n   * @type {boolean}\n   * @default true\n   */\n  draggable: true,\n  /**\n   * Disables the slider and prevents event listeners from being applied. Double checked by JS with `disabledClass`.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  disabled: false,\n  /**\n   * Allows the use of two handles. Double checked by the JS. Changes some logic handling.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  doubleSided: false,\n  /**\n   * Potential future feature.\n   */\n  // steps: 100,\n  /**\n   * Number of decimal places the plugin should go to for floating point precision.\n   * @option\n   * @type {number}\n   * @default 2\n   */\n  decimal: 2,\n  /**\n   * Time delay for dragged elements.\n   */\n  // dragDelay: 0,\n  /**\n   * Time, in ms, to animate the movement of a slider handle if user clicks/taps on the bar. Needs to be manually set if updating the transition time in the Sass settings.\n   * @option\n   * @type {number}\n   * @default 200\n   */\n  moveTime: 200,//update this if changing the transition time in the sass\n  /**\n   * Class applied to disabled sliders.\n   * @option\n   * @type {string}\n   * @default 'disabled'\n   */\n  disabledClass: 'disabled',\n  /**\n   * Will invert the default layout for a vertical<span data-tooltip title=\"who would do this???\"> </span>slider.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  invertVertical: false,\n  /**\n   * Milliseconds before the `changed.zf-slider` event is triggered after value change.\n   * @option\n   * @type {number}\n   * @default 500\n   */\n  changedDelay: 500,\n  /**\n  * Basevalue for non-linear sliders\n  * @option\n  * @type {number}\n  * @default 5\n  */\n  nonLinearBase: 5,\n  /**\n  * Basevalue for non-linear sliders, possible values are: `'linear'`, `'pow'` & `'log'`. Pow and Log use the nonLinearBase setting.\n  * @option\n  * @type {string}\n  * @default 'linear'\n  */\n  positionValueFunction: 'linear',\n};\n\nfunction percent(frac, num) {\n  return (frac / num);\n}\nfunction absPosition($handle, dir, clickPos, param) {\n  return Math.abs(($handle.position()[dir] + ($handle[param]() / 2)) - clickPos);\n}\nfunction baseLog(base, value) {\n  return Math.log(value)/Math.log(base)\n}\n\nexport {Slider};\n","'use strict';\n\nimport $ from 'jquery';\nimport { onLoad } from './foundation.core.utils';\nimport { Motion } from './foundation.util.motion';\n\nconst MutationObserver = (function () {\n  var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n  for (var i=0; i < prefixes.length; i++) {\n    if (`${prefixes[i]}MutationObserver` in window) {\n      return window[`${prefixes[i]}MutationObserver`];\n    }\n  }\n  return false;\n}());\n\nconst triggers = (el, type) => {\n  el.data(type).split(' ').forEach(id => {\n    $(`#${id}`)[ type === 'close' ? 'trigger' : 'triggerHandler'](`${type}.zf.trigger`, [el]);\n  });\n};\n\nvar Triggers = {\n  Listeners: {\n    Basic: {},\n    Global: {}\n  },\n  Initializers: {}\n}\n\nTriggers.Listeners.Basic  = {\n  openListener: function() {\n    triggers($(this), 'open');\n  },\n  closeListener: function() {\n    let id = $(this).data('close');\n    if (id) {\n      triggers($(this), 'close');\n    }\n    else {\n      $(this).trigger('close.zf.trigger');\n    }\n  },\n  toggleListener: function() {\n    let id = $(this).data('toggle');\n    if (id) {\n      triggers($(this), 'toggle');\n    } else {\n      $(this).trigger('toggle.zf.trigger');\n    }\n  },\n  closeableListener: function(e) {\n    e.stopPropagation();\n    let animation = $(this).data('closable');\n\n    if(animation !== ''){\n      Motion.animateOut($(this), animation, function() {\n        $(this).trigger('closed.zf');\n      });\n    }else{\n      $(this).fadeOut().trigger('closed.zf');\n    }\n  },\n  toggleFocusListener: function() {\n    let id = $(this).data('toggle-focus');\n    $(`#${id}`).triggerHandler('toggle.zf.trigger', [$(this)]);\n  }\n};\n\n// Elements with [data-open] will reveal a plugin that supports it when clicked.\nTriggers.Initializers.addOpenListener = ($elem) => {\n  $elem.off('click.zf.trigger', Triggers.Listeners.Basic.openListener);\n  $elem.on('click.zf.trigger', '[data-open]', Triggers.Listeners.Basic.openListener);\n}\n\n// Elements with [data-close] will close a plugin that supports it when clicked.\n// If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\nTriggers.Initializers.addCloseListener = ($elem) => {\n  $elem.off('click.zf.trigger', Triggers.Listeners.Basic.closeListener);\n  $elem.on('click.zf.trigger', '[data-close]', Triggers.Listeners.Basic.closeListener);\n}\n\n// Elements with [data-toggle] will toggle a plugin that supports it when clicked.\nTriggers.Initializers.addToggleListener = ($elem) => {\n  $elem.off('click.zf.trigger', Triggers.Listeners.Basic.toggleListener);\n  $elem.on('click.zf.trigger', '[data-toggle]', Triggers.Listeners.Basic.toggleListener);\n}\n\n// Elements with [data-closable] will respond to close.zf.trigger events.\nTriggers.Initializers.addCloseableListener = ($elem) => {\n  $elem.off('close.zf.trigger', Triggers.Listeners.Basic.closeableListener);\n  $elem.on('close.zf.trigger', '[data-closeable], [data-closable]', Triggers.Listeners.Basic.closeableListener);\n}\n\n// Elements with [data-toggle-focus] will respond to coming in and out of focus\nTriggers.Initializers.addToggleFocusListener = ($elem) => {\n  $elem.off('focus.zf.trigger blur.zf.trigger', Triggers.Listeners.Basic.toggleFocusListener);\n  $elem.on('focus.zf.trigger blur.zf.trigger', '[data-toggle-focus]', Triggers.Listeners.Basic.toggleFocusListener);\n}\n\n\n\n// More Global/complex listeners and triggers\nTriggers.Listeners.Global  = {\n  resizeListener: function($nodes) {\n    if(!MutationObserver){//fallback for IE 9\n      $nodes.each(function(){\n        $(this).triggerHandler('resizeme.zf.trigger');\n      });\n    }\n    //trigger all listening elements and signal a resize event\n    $nodes.attr('data-events', \"resize\");\n  },\n  scrollListener: function($nodes) {\n    if(!MutationObserver){//fallback for IE 9\n      $nodes.each(function(){\n        $(this).triggerHandler('scrollme.zf.trigger');\n      });\n    }\n    //trigger all listening elements and signal a scroll event\n    $nodes.attr('data-events', \"scroll\");\n  },\n  closeMeListener: function(e, pluginId){\n    let plugin = e.namespace.split('.')[0];\n    let plugins = $(`[data-${plugin}]`).not(`[data-yeti-box=\"${pluginId}\"]`);\n\n    plugins.each(function(){\n      let _this = $(this);\n      _this.triggerHandler('close.zf.trigger', [_this]);\n    });\n  }\n}\n\n// Global, parses whole document.\nTriggers.Initializers.addClosemeListener = function(pluginName) {\n  var yetiBoxes = $('[data-yeti-box]'),\n      plugNames = ['dropdown', 'tooltip', 'reveal'];\n\n  if(pluginName){\n    if(typeof pluginName === 'string'){\n      plugNames.push(pluginName);\n    }else if(typeof pluginName === 'object' && typeof pluginName[0] === 'string'){\n      plugNames.concat(pluginName);\n    }else{\n      console.error('Plugin names must be strings');\n    }\n  }\n  if(yetiBoxes.length){\n    let listeners = plugNames.map((name) => {\n      return `closeme.zf.${name}`;\n    }).join(' ');\n\n    $(window).off(listeners).on(listeners, Triggers.Listeners.Global.closeMeListener);\n  }\n}\n\nfunction debounceGlobalListener(debounce, trigger, listener) {\n  let timer, args = Array.prototype.slice.call(arguments, 3);\n  $(window).off(trigger).on(trigger, function(e) {\n    if (timer) { clearTimeout(timer); }\n    timer = setTimeout(function(){\n      listener.apply(null, args);\n    }, debounce || 10);//default time to emit scroll event\n  });\n}\n\nTriggers.Initializers.addResizeListener = function(debounce){\n  let $nodes = $('[data-resize]');\n  if($nodes.length){\n    debounceGlobalListener(debounce, 'resize.zf.trigger', Triggers.Listeners.Global.resizeListener, $nodes);\n  }\n}\n\nTriggers.Initializers.addScrollListener = function(debounce){\n  let $nodes = $('[data-scroll]');\n  if($nodes.length){\n    debounceGlobalListener(debounce, 'scroll.zf.trigger', Triggers.Listeners.Global.scrollListener, $nodes);\n  }\n}\n\nTriggers.Initializers.addMutationEventsListener = function($elem) {\n  if(!MutationObserver){ return false; }\n  let $nodes = $elem.find('[data-resize], [data-scroll], [data-mutate]');\n\n  //element callback\n  var listeningElementsMutation = function (mutationRecordsList) {\n    var $target = $(mutationRecordsList[0].target);\n\n    //trigger the event handler for the element depending on type\n    switch (mutationRecordsList[0].type) {\n      case \"attributes\":\n        if ($target.attr(\"data-events\") === \"scroll\" && mutationRecordsList[0].attributeName === \"data-events\") {\n          $target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\n        }\n        if ($target.attr(\"data-events\") === \"resize\" && mutationRecordsList[0].attributeName === \"data-events\") {\n          $target.triggerHandler('resizeme.zf.trigger', [$target]);\n         }\n        if (mutationRecordsList[0].attributeName === \"style\") {\n          $target.closest(\"[data-mutate]\").attr(\"data-events\",\"mutate\");\n          $target.closest(\"[data-mutate]\").triggerHandler('mutateme.zf.trigger', [$target.closest(\"[data-mutate]\")]);\n        }\n        break;\n\n      case \"childList\":\n        $target.closest(\"[data-mutate]\").attr(\"data-events\",\"mutate\");\n        $target.closest(\"[data-mutate]\").triggerHandler('mutateme.zf.trigger', [$target.closest(\"[data-mutate]\")]);\n        break;\n\n      default:\n        return false;\n      //nothing\n    }\n  };\n\n  if ($nodes.length) {\n    //for each element that needs to listen for resizing, scrolling, or mutation add a single observer\n    for (var i = 0; i <= $nodes.length - 1; i++) {\n      var elementObserver = new MutationObserver(listeningElementsMutation);\n      elementObserver.observe($nodes[i], { attributes: true, childList: true, characterData: false, subtree: true, attributeFilter: [\"data-events\", \"style\"] });\n    }\n  }\n}\n\nTriggers.Initializers.addSimpleListeners = function() {\n  let $document = $(document);\n\n  Triggers.Initializers.addOpenListener($document);\n  Triggers.Initializers.addCloseListener($document);\n  Triggers.Initializers.addToggleListener($document);\n  Triggers.Initializers.addCloseableListener($document);\n  Triggers.Initializers.addToggleFocusListener($document);\n\n}\n\nTriggers.Initializers.addGlobalListeners = function() {\n  let $document = $(document);\n  Triggers.Initializers.addMutationEventsListener($document);\n  Triggers.Initializers.addResizeListener();\n  Triggers.Initializers.addScrollListener();\n  Triggers.Initializers.addClosemeListener();\n}\n\n\nTriggers.init = function ($, Foundation) {\n  onLoad($(window), function () {\n    if ($.triggersInitialized !== true) {\n      Triggers.Initializers.addSimpleListeners();\n      Triggers.Initializers.addGlobalListeners();\n      $.triggersInitialized = true;\n    }\n  });\n\n  if(Foundation) {\n    Foundation.Triggers = Triggers;\n    // Legacy included to be backwards compatible for now.\n    Foundation.IHearYou = Triggers.Initializers.addGlobalListeners\n  }\n}\n\nexport {Triggers};\n"]}